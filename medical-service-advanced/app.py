"""
RICOH Espa√±a - IA de Codificaci√≥n M√©dica CIE-10-ES
Backend API con OpenAI GPT-4 Turbo para codificaci√≥n m√©dica experta
"""

from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import List, Optional, Dict, Any
import logging
import os
import time
import json
from datetime import datetime

# Importar OpenAI y base de datos CIE-10
from openai import OpenAI
from models.cie10_database import CIE10Database
from dotenv import load_dotenv

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = FastAPI(
    title="RICOH Espa√±a - IA Codificaci√≥n M√©dica CIE-10-ES",
    description="API de codificaci√≥n m√©dica con GPT-4 Turbo y base CIE-10-ES oficial",
    version="1.0.0"
)

# Configurar CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # En producci√≥n, especificar dominios exactos
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Modelos de datos seg√∫n especificaci√≥n
class SolicitudCodificacion(BaseModel):
    diagnostico: str
    edad: Optional[int] = None
    sintomas: Optional[List[str]] = []

class DiagnosticoPrincipal(BaseModel):
    codigo: str
    descripcion: str
    justificacion: str

class DiagnosticoSecundario(BaseModel):
    codigo: str
    descripcion: str
    justificacion: str

class RespuestaCodificacion(BaseModel):
    diagnostico_propuesto: str
    diagnostico_principal: DiagnosticoPrincipal
    diagnosticos_secundarios: List[DiagnosticoSecundario] = []
    tiempo_procesamiento: Optional[float] = None
    motor_ia: str = "OpenAI GPT-4 Turbo"
    base_datos: str = "CIE-10-ES Ministerio Sanidad"

class HealthResponse(BaseModel):
    status: str
    motor_ia: str
    base_datos: str
    version: str
    timestamp: str

# Cargar variables de entorno desde archivo local
load_dotenv('config.env')

# Instancias globales
client = None
cie10_db = None

# Prompt m√©dico experto seg√∫n especificaci√≥n exacta
PROMPT_MEDICO_EXPERTO = """Act√∫a como un codificador m√©dico experto en CIE‚Äë10‚ÄëES (versi√≥n espa√±ola oficial del Ministerio de Sanidad).

Se te proporcionar√°:
- Un diagn√≥stico cl√≠nico en lenguaje natural
- La edad del paciente
- S√≠ntomas relevantes

Tu tarea es:
1. Proponer un diagn√≥stico estructurado breve basado en la informaci√≥n.
2. Identificar el diagn√≥stico principal m√°s probable.
3. Listar diagn√≥sticos secundarios cl√≠nicamente relevantes.
4. Para cada uno, entregar:
   - C√≥digo CIE‚Äë10‚ÄëES
   - Descripci√≥n en espa√±ol
   - Justificaci√≥n m√©dica basada en los datos (edad, s√≠ntomas, diagn√≥stico)

Formato de respuesta (JSON):

{
  "diagn√≥stico_propuesto": "[resumen breve]",
  "diagn√≥stico_principal": {
    "c√≥digo": "Jxx.xx",
    "descripci√≥n": "[nombre oficial en espa√±ol]",
    "justificaci√≥n": "[por qu√© aplica este c√≥digo al caso]"
  },
  "diagn√≥sticos_secundarios": [
    {
      "c√≥digo": "Jyy.yy",
      "descripci√≥n": "[nombre oficial]",
      "justificaci√≥n": "[motivo cl√≠nico]"
    }
  ]
}

Responde √öNICAMENTE con el JSON v√°lido, sin texto adicional."""

@app.on_event("startup")
async def startup_event():
    """Inicializar OpenAI y base de datos CIE-10-ES al startup"""
    global client, cie10_db
    try:
        # Inicializar base de datos CIE-10-ES
        cie10_db = CIE10Database()
        stats = cie10_db.get_stats()
        logger.info(f"‚úÖ Base de datos CIE-10-ES cargada: {stats['codigos_totales']} c√≥digos")
        
        # Verificar API key
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key:
            logger.error("‚ùå OPENAI_API_KEY no encontrado en variables de entorno")
            logger.error("üí° Para configurar: export OPENAI_API_KEY=sk-your-key-here")
            return
        
        # Inicializar cliente OpenAI
        client = OpenAI(api_key=api_key)
        logger.info("‚úÖ RICOH Espa√±a - Motor GPT-4 Turbo inicializado correctamente")
        
    except Exception as e:
        logger.error(f"‚ùå Error inicializando sistema: {str(e)}")

@app.get("/health", response_model=HealthResponse)
async def health_check():
    """Check de salud del servicio RICOH"""
    return HealthResponse(
        status="healthy" if client else "error",
        motor_ia="OpenAI GPT-4 Turbo" if client else "No disponible",
        base_datos="CIE-10-ES Ministerio de Sanidad",
        version="RICOH Espa√±a v1.0.0",
        timestamp=datetime.now().isoformat()
    )

@app.post("/codificar", response_model=RespuestaCodificacion)
async def codificar_diagnostico(solicitud: SolicitudCodificacion):
    """
    Endpoint principal para codificaci√≥n CIE-10-ES
    Seg√∫n especificaci√≥n RICOH Espa√±a
    """
    if not client:
        raise HTTPException(
            status_code=503, 
            detail="Servicio no disponible - GPT-4 no inicializado. Verifique OPENAI_API_KEY."
        )
    
    # Validar entrada
    if not solicitud.diagnostico.strip():
        raise HTTPException(
            status_code=400, 
            detail="El diagn√≥stico cl√≠nico es requerido"
        )
    
    start_time = time.time()
    
    try:
        # Buscar c√≥digos relevantes en la base de datos CIE-10-ES
        codigos_relevantes = []
        if solicitud.sintomas:
            codigos_relevantes = cie10_db.buscar_por_sintomas(solicitud.sintomas)
        
        # Buscar c√≥digos adicionales basados en el diagn√≥stico
        codigos_diagnostico = cie10_db.buscar_codigos_similares(solicitud.diagnostico, limite=3)
        codigos_relevantes.extend([codigo for codigo, desc in codigos_diagnostico])
        
        # Generar contexto CIE-10-ES para GPT-4
        contexto_cie10 = cie10_db.obtener_contexto_medico(list(set(codigos_relevantes)))
        
        # Construir el prompt con los datos del paciente y contexto CIE-10
        prompt_usuario = f"""DATOS DEL PACIENTE:

Diagn√≥stico cl√≠nico: {solicitud.diagnostico}
Edad del paciente: {solicitud.edad if solicitud.edad else 'No especificada'}
S√≠ntomas relevantes: {', '.join(solicitud.sintomas) if solicitud.sintomas else 'No especificados'}

{contexto_cie10}

Analiza estos datos y proporciona la codificaci√≥n CIE-10-ES seg√∫n las instrucciones, utilizando preferentemente los c√≥digos del contexto cuando sean apropiados."""

        # Llamada a GPT-4 Turbo
        response = client.chat.completions.create(
            model="gpt-4o",  # GPT-4 Omni (modelo actual disponible)
            messages=[
                {
                    "role": "system", 
                    "content": PROMPT_MEDICO_EXPERTO
                },
                {
                    "role": "user", 
                    "content": prompt_usuario
                }
            ],
            temperature=0.1,  # Baja creatividad para precisi√≥n m√©dica
            max_tokens=1200,
            response_format={"type": "json_object"}
        )
        
        # Procesar respuesta de GPT-4
        resultado_json = json.loads(response.choices[0].message.content)
        
        # Validar y estructurar respuesta seg√∫n el modelo
        diagnostico_principal = DiagnosticoPrincipal(
            codigo=resultado_json["diagn√≥stico_principal"]["c√≥digo"],
            descripcion=resultado_json["diagn√≥stico_principal"]["descripci√≥n"],
            justificacion=resultado_json["diagn√≥stico_principal"]["justificaci√≥n"]
        )
        
        # Procesar diagn√≥sticos secundarios
        diagnosticos_secundarios = []
        if "diagn√≥sticos_secundarios" in resultado_json:
            for diag_sec in resultado_json["diagn√≥sticos_secundarios"]:
                diagnosticos_secundarios.append(DiagnosticoSecundario(
                    codigo=diag_sec["c√≥digo"],
                    descripcion=diag_sec["descripci√≥n"],
                    justificacion=diag_sec["justificaci√≥n"]
                ))
        
        tiempo_procesamiento = time.time() - start_time
        
        # Respuesta final seg√∫n especificaci√≥n RICOH
        return RespuestaCodificacion(
            diagnostico_propuesto=resultado_json["diagn√≥stico_propuesto"],
            diagnostico_principal=diagnostico_principal,
            diagnosticos_secundarios=diagnosticos_secundarios,
            tiempo_procesamiento=round(tiempo_procesamiento, 2)
        )
        
    except json.JSONDecodeError as e:
        logger.error(f"Error decodificando JSON de GPT-4: {str(e)}")
        raise HTTPException(
            status_code=500, 
            detail="Error en el formato de respuesta del motor de IA"
        )
    except Exception as e:
        logger.error(f"Error en codificaci√≥n GPT-4: {str(e)}")
        raise HTTPException(
            status_code=500, 
            detail=f"Error en codificaci√≥n m√©dica: {str(e)}"
        )

@app.get("/status")
async def status_detallado():
    """Estado detallado del sistema RICOH"""
    cie10_stats = cie10_db.get_stats() if cie10_db else {}
    
    return {
        "servicio": "RICOH Espa√±a - IA Codificaci√≥n M√©dica CIE-10-ES",
        "version": "1.0.0",
        "motor_ia": {
            "proveedor": "OpenAI",
            "modelo": "gpt-4o (GPT-4 Omni)",
            "disponible": client is not None
        },
        "base_datos": {
            "fuente": cie10_stats.get('fuente', 'CIE-10-ES Ministerio de Sanidad Espa√±a'),
            "version": cie10_stats.get('version', 'N/A'),
            "categorias": cie10_stats.get('categorias', 0),
            "codigos_totales": cie10_stats.get('codigos_totales', 0),
            "sintomas_indexados": cie10_stats.get('sintomas_indexados', 0),
            "url_oficial": "https://eciemaps.mscbs.gob.es/ecieMaps/browser/index_10_mc.html",
            "disponible": cie10_db is not None
        },
        "api_key_configurada": bool(os.getenv('OPENAI_API_KEY')),
        "endpoints": {
            "codificacion": "/codificar",
            "salud": "/health",
            "estado": "/status",
            "cie10": "/cie10/buscar"
        },
        "timestamp": datetime.now().isoformat()
    }

@app.get("/cie10/buscar")
async def buscar_cie10(q: str = "", limite: int = 5):
    """
    Buscar c√≥digos CIE-10 por t√©rmino de b√∫squeda
    """
    try:
        if not cie10_db:
            raise HTTPException(status_code=500, detail="Base de datos CIE-10 no disponible")
        
        resultados = cie10_db.buscar_codigos_similares(q, limite)
        return {
            "busqueda": q,
            "resultados": resultados,
            "total": len(resultados)
        }
    except Exception as e:
        logger.error(f"Error en b√∫squeda CIE-10: {e}")
        raise HTTPException(status_code=500, detail=f"Error en b√∫squeda: {str(e)}")

@app.get("/ejemplos-clinicos/aleatorio")
async def obtener_ejemplo_clinico_aleatorio():
    """
    Obtener un ejemplo cl√≠nico aleatorio de los 50 ejemplos integrados
    """
    ejemplos_clinicos = [
        {
            "diagnostico": "Paciente de 45 a√±os con presi√≥n arterial 160/100 mmHg",
            "edad": 45,
            "sintomas": ["Presi√≥n arterial elevada", "Dolor de cabeza", "Mareos"],
            "codigo_esperado": "I10",
            "descripcion": "Hipertensi√≥n esencial (primaria)"
        },
        {
            "diagnostico": "Paciente de 55 a√±os con glucemia en ayunas de 180 mg/dL",
            "edad": 55,
            "sintomas": ["Poliuria", "Polidipsia", "P√©rdida de peso"],
            "codigo_esperado": "E11.9",
            "descripcion": "Diabetes mellitus no insulinodependiente sin menci√≥n de complicaci√≥n"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con dolor precordial de 2 horas de evoluci√≥n",
            "edad": 65,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Sudoraci√≥n"],
            "codigo_esperado": "I21.4",
            "descripcion": "Infarto agudo de miocardio no transmural"
        },
        {
            "diagnostico": "Paciente de 30 a√±os con cefalea puls√°til de 4 horas",
            "edad": 30,
            "sintomas": ["Cefalea unilateral", "Fotofobia", "N√°useas"],
            "codigo_esperado": "G43.0",
            "descripcion": "Migra√±a sin aura"
        },
        {
            "diagnostico": "Paciente fumador de 70 a√±os con exacerbaci√≥n de EPOC",
            "edad": 70,
            "sintomas": ["Disnea", "Tos productiva", "Sibilancias"],
            "codigo_esperado": "J44.0",
            "descripcion": "EPOC con infecci√≥n aguda de las v√≠as respiratorias inferiores"
        },
        {
            "diagnostico": "Paciente de 40 a√±os con dolor abdominal superior",
            "edad": 40,
            "sintomas": ["Dolor epig√°strico", "N√°useas", "P√©rdida de apetito"],
            "codigo_esperado": "K29.3",
            "descripcion": "Gastritis cr√≥nica superficial"
        },
        {
            "diagnostico": "Paciente de 45 a√±os con lumbalgia de 3 d√≠as",
            "edad": 45,
            "sintomas": ["Dolor lumbar", "Limitaci√≥n de movimientos", "Rigidez"],
            "codigo_esperado": "M79.3",
            "descripcion": "Dolor en la regi√≥n lumbar"
        },
        {
            "diagnostico": "Paciente de 35 a√±os con temperatura de 38.5¬∞C",
            "edad": 35,
            "sintomas": ["Fiebre", "Malestar general", "Escalofr√≠os"],
            "codigo_esperado": "R50.9",
            "descripcion": "Fiebre no especificada"
        },
        {
            "diagnostico": "Paciente de 75 a√±os con disnea de esfuerzo",
            "edad": 75,
            "sintomas": ["Disnea", "Edema perif√©rico", "Fatiga"],
            "codigo_esperado": "I50.0",
            "descripcion": "Insuficiencia card√≠aca congestiva"
        },
        {
            "diagnostico": "Paciente con glucemia de 450 mg/dL y cetonas positivas",
            "edad": 28,
            "sintomas": ["Poliuria", "Polidipsia", "N√°useas", "Dolor abdominal"],
            "codigo_esperado": "E11.1",
            "descripcion": "Diabetes mellitus no insulinodependiente con cetoacidosis"
        },
        {
            "diagnostico": "Paciente de 60 a√±os con infiltrado pulmonar derecho",
            "edad": 60,
            "sintomas": ["Fiebre", "Tos", "Disnea", "Dolor tor√°cico"],
            "codigo_esperado": "J18.9",
            "descripcion": "Neumon√≠a no especificada"
        },
        {
            "diagnostico": "Paciente de 70 a√±os con melena de 24 horas",
            "edad": 70,
            "sintomas": ["Melena", "Hematemesis", "Dolor abdominal"],
            "codigo_esperado": "K92.2",
            "descripcion": "Hemorragia gastrointestinal no especificada"
        },
        {
            "diagnostico": "Paciente de 25 a√±os con crisis convulsiva t√≥nico-cl√≥nica",
            "edad": 25,
            "sintomas": ["Convulsiones", "P√©rdida de consciencia", "Confusi√≥n"],
            "codigo_esperado": "G40.9",
            "descripcion": "Epilepsia no especificada"
        },
        {
            "diagnostico": "Paciente de 68 a√±os con hemiparesia izquierda s√∫bita",
            "edad": 68,
            "sintomas": ["Hemiparesia", "Afasia", "Alteraci√≥n de consciencia"],
            "codigo_esperado": "I63.4",
            "descripcion": "Infarto cerebral debido a embolia de arterias cerebrales"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con creatinina 3.2 mg/dL",
            "edad": 65,
            "sintomas": ["Fatiga", "Edema", "Anemia", "Hipertensi√≥n"],
            "codigo_esperado": "N18.9",
            "descripcion": "Insuficiencia renal cr√≥nica no especificada"
        },
        {
            "diagnostico": "Paciente de 70 a√±os con artrosis de rodillas y caderas",
            "edad": 70,
            "sintomas": ["Dolor articular", "Rigidez", "Limitaci√≥n de movimientos"],
            "codigo_esperado": "M15.0",
            "descripcion": "Artrosis primaria generalizada"
        },
        {
            "diagnostico": "Paciente de 40 a√±os con cefalea tensional",
            "edad": 40,
            "sintomas": ["Dolor de cabeza", "Fotofobia", "N√°useas"],
            "codigo_esperado": "R51",
            "descripcion": "Cefalea"
        },
        {
            "diagnostico": "Paciente de 50 a√±os con colesterol total 280 mg/dL",
            "edad": 50,
            "sintomas": ["Asintom√°tico", "Xantomas", "Arco corneal"],
            "codigo_esperado": "E78.0",
            "descripcion": "Hipercolesterolemia pura"
        },
        {
            "diagnostico": "Paciente de 60 a√±os con angina de esfuerzo",
            "edad": 60,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Fatiga"],
            "codigo_esperado": "I25.1",
            "descripcion": "Enfermedad ateroscler√≥tica del coraz√≥n"
        },
        {
            "diagnostico": "Paciente de 35 a√±os con crisis asm√°tica",
            "edad": 35,
            "sintomas": ["Sibilancias", "Tos", "Disnea", "Opresi√≥n tor√°cica"],
            "codigo_esperado": "J45.9",
            "descripcion": "Asma no especificada"
        },
        {
            "diagnostico": "Paciente de 45 a√±os con estre√±imiento cr√≥nico",
            "edad": 45,
            "sintomas": ["Dificultad para defecar", "Dolor abdominal", "Distensi√≥n"],
            "codigo_esperado": "K59.0",
            "descripcion": "Estre√±imiento"
        },
        {
            "diagnostico": "Paciente con paro card√≠aco y da√±o cerebral an√≥xico",
            "edad": 55,
            "sintomas": ["Alteraci√≥n de consciencia", "Convulsiones", "D√©ficit neurol√≥gico"],
            "codigo_esperado": "G93.1",
            "descripcion": "Anoxia cerebral no clasificada en otra parte"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con angina de reposo",
            "edad": 65,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Sudoraci√≥n"],
            "codigo_esperado": "I20.0",
            "descripcion": "Angina de pecho inestable"
        },
        {
            "diagnostico": "Paciente con nefropat√≠a diab√©tica y proteinuria",
            "edad": 58,
            "sintomas": ["Poliuria", "Edema", "Hipertensi√≥n", "Proteinuria"],
            "codigo_esperado": "E11.2",
            "descripcion": "Diabetes mellitus no insulinodependiente con complicaciones renales"
        },
        {
            "diagnostico": "Paciente fumador con exacerbaci√≥n de EPOC",
            "edad": 72,
            "sintomas": ["Disnea", "Tos", "Producci√≥n de esputo"],
            "codigo_esperado": "J44.1",
            "descripcion": "EPOC con exacerbaci√≥n aguda no especificada"
        },
        {
            "diagnostico": "Paciente de 50 a√±os con √∫lcera g√°strica cr√≥nica",
            "edad": 50,
            "sintomas": ["Dolor epig√°strico", "N√°useas", "P√©rdida de apetito"],
            "codigo_esperado": "K25.9",
            "descripcion": "√ölcera g√°strica no especificada"
        },
        {
            "diagnostico": "Paciente de 40 a√±os con lumbalgia mec√°nica",
            "edad": 40,
            "sintomas": ["Dolor lumbar", "Limitaci√≥n de movimientos", "Rigidez"],
            "codigo_esperado": "M54.5",
            "descripcion": "Dolor en la regi√≥n lumbar"
        },
        {
            "diagnostico": "Paciente de 55 a√±os con dolor precordial at√≠pico",
            "edad": 55,
            "sintomas": ["Dolor tor√°cico", "Opresi√≥n", "Disconfort"],
            "codigo_esperado": "R07.9",
            "descripcion": "Dolor en el t√≥rax no especificado"
        },
        {
            "diagnostico": "Paciente de 70 a√±os con disnea de esfuerzo progresiva",
            "edad": 70,
            "sintomas": ["Disnea", "Ortopnea", "Disnea parox√≠stica nocturna"],
            "codigo_esperado": "I50.1",
            "descripcion": "Insuficiencia card√≠aca izquierda"
        },
        {
            "diagnostico": "Paciente con neuropat√≠a diab√©tica perif√©rica",
            "edad": 62,
            "sintomas": ["Parestesias", "Dolor neurop√°tico", "P√©rdida de sensibilidad"],
            "codigo_esperado": "E11.4",
            "descripcion": "Diabetes mellitus no insulinodependiente con complicaciones neurol√≥gicas"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con infiltrado bronconeum√≥nico",
            "edad": 65,
            "sintomas": ["Fiebre", "Tos", "Disnea", "Dolor tor√°cico"],
            "codigo_esperado": "J18.0",
            "descripcion": "Bronconeumon√≠a no especificada"
        },
        {
            "diagnostico": "Paciente de 75 a√±os con melena de 48 horas",
            "edad": 75,
            "sintomas": ["Heces negras", "Dolor abdominal", "Anemia"],
            "codigo_esperado": "K92.1",
            "descripcion": "Melena"
        },
        {
            "diagnostico": "Paciente de 30 a√±os con crisis parciales complejas",
            "edad": 30,
            "sintomas": ["Convulsiones focales", "Aura", "Alteraci√≥n de consciencia"],
            "codigo_esperado": "G40.1",
            "descripcion": "Epilepsia localizada sintom√°tica"
        },
        {
            "diagnostico": "Paciente de 72 a√±os con ACV isqu√©mico carot√≠deo",
            "edad": 72,
            "sintomas": ["Hemiparesia", "Afasia", "Alteraci√≥n de consciencia"],
            "codigo_esperado": "I63.2",
            "descripcion": "Infarto cerebral debido a oclusi√≥n de arterias precerebrales"
        },
        {
            "diagnostico": "Paciente con TFG 90 ml/min y microalbuminuria",
            "edad": 45,
            "sintomas": ["Asintom√°tico", "Proteinuria", "Hipertensi√≥n"],
            "codigo_esperado": "N18.1",
            "descripcion": "Enfermedad renal cr√≥nica estadio 1"
        },
        {
            "diagnostico": "Paciente de 60 a√±os con artrosis de la base del pulgar",
            "edad": 60,
            "sintomas": ["Dolor en la base del pulgar", "Limitaci√≥n de movimientos", "Deformidad"],
            "codigo_esperado": "M15.1",
            "descripcion": "Artrosis de la primera articulaci√≥n carpometacarpiana"
        },
        {
            "diagnostico": "Paciente de 45 a√±os con dolor cr√≥nico generalizado",
            "edad": 45,
            "sintomas": ["Dolor", "Malestar", "Disconfort"],
            "codigo_esperado": "R52.9",
            "descripcion": "Dolor no especificado"
        },
        {
            "diagnostico": "Paciente de 40 a√±os con triglic√©ridos 500 mg/dL",
            "edad": 40,
            "sintomas": ["Asintom√°tico", "Xantomas", "Pancreatitis"],
            "codigo_esperado": "E78.1",
            "descripcion": "Hipergliceridemia pura"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con enfermedad coronaria estable",
            "edad": 65,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Fatiga"],
            "codigo_esperado": "I25.0",
            "descripcion": "Enfermedad cardiovascular ateroscler√≥tica"
        },
        {
            "diagnostico": "Paciente de 25 a√±os con asma al√©rgica estacional",
            "edad": 25,
            "sintomas": ["Sibilancias", "Tos", "Disnea", "Rinorrea"],
            "codigo_esperado": "J45.0",
            "descripcion": "Asma al√©rgica predominante"
        },
        {
            "diagnostico": "Paciente de 35 a√±os con s√≠ndrome del intestino irritable",
            "edad": 35,
            "sintomas": ["Diarrea", "Dolor abdominal", "Urgencia defecatoria"],
            "codigo_esperado": "K59.1",
            "descripcion": "Diarrea funcional"
        },
        {
            "diagnostico": "Paciente de 70 a√±os con hidrocefalia normotensiva",
            "edad": 70,
            "sintomas": ["Cefalea", "N√°useas", "Alteraci√≥n de consciencia", "Trastornos de marcha"],
            "codigo_esperado": "G93.2",
            "descripcion": "Hidrocefalia no especificada"
        },
        {
            "diagnostico": "Paciente de 60 a√±os con angina variante",
            "edad": 60,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Fatiga"],
            "codigo_esperado": "I20.8",
            "descripcion": "Otras formas de angina de pecho"
        },
        {
            "diagnostico": "Paciente con retinopat√≠a diab√©tica proliferativa",
            "edad": 55,
            "sintomas": ["Visi√≥n borrosa", "Fotopsias", "P√©rdida de visi√≥n"],
            "codigo_esperado": "E11.3",
            "descripcion": "Diabetes mellitus no insulinodependiente con complicaciones oft√°lmicas"
        },
        {
            "diagnostico": "Paciente fumador con exacerbaci√≥n infecciosa de EPOC",
            "edad": 68,
            "sintomas": ["Disnea", "Tos", "Producci√≥n de esputo", "Fiebre"],
            "codigo_esperado": "J44.2",
            "descripcion": "EPOC con exacerbaci√≥n aguda"
        },
        {
            "diagnostico": "Paciente de 55 a√±os con √∫lcera g√°strica sangrante",
            "edad": 55,
            "sintomas": ["Dolor epig√°strico", "Hematemesis", "Melena", "Anemia"],
            "codigo_esperado": "K25.0",
            "descripcion": "√ölcera g√°strica aguda con hemorragia"
        },
        {
            "diagnostico": "Paciente de 45 a√±os con dorsalgia mec√°nica",
            "edad": 45,
            "sintomas": ["Dolor dorsal", "Rigidez", "Limitaci√≥n de movimientos"],
            "codigo_esperado": "M54.6",
            "descripcion": "Dolor en la columna tor√°cica"
        },
        {
            "diagnostico": "Paciente de 50 a√±os con dolor pleur√≠tico",
            "edad": 50,
            "sintomas": ["Dolor tor√°cico", "Disnea", "Tos"],
            "codigo_esperado": "R07.1",
            "descripcion": "Dolor en el t√≥rax al respirar"
        },
        {
            "diagnostico": "Paciente de 75 a√±os con insuficiencia card√≠aca global",
            "edad": 75,
            "sintomas": ["Disnea", "Fatiga", "Edema perif√©rico"],
            "codigo_esperado": "I50.9",
            "descripcion": "Insuficiencia card√≠aca no especificada"
        },
        {
            "diagnostico": "Paciente con pie diab√©tico y √∫lcera en tal√≥n",
            "edad": 67,
            "sintomas": ["Dolor en extremidades", "Claudicaci√≥n", "√ölceras"],
            "codigo_esperado": "E11.5",
            "descripcion": "Diabetes mellitus no insulinodependiente con complicaciones circulatorias perif√©ricas"
        },
        {
            "diagnostico": "Paciente de 60 a√±os con neumon√≠a del l√≥bulo inferior derecho",
            "edad": 60,
            "sintomas": ["Fiebre", "Tos", "Disnea", "Dolor tor√°cico"],
            "codigo_esperado": "J18.1",
            "descripcion": "Neumon√≠a lobar no especificada"
        },
        {
            "diagnostico": "Paciente de 70 a√±os con hematemesis masiva",
            "edad": 70,
            "sintomas": ["V√≥mitos con sangre", "Dolor abdominal", "Anemia"],
            "codigo_esperado": "K92.0",
            "descripcion": "Hematemesis"
        },
        {
            "diagnostico": "Paciente de 35 a√±os con crisis parciales complejas",
            "edad": 35,
            "sintomas": ["Convulsiones focales", "Alteraci√≥n de consciencia", "Automatismos"],
            "codigo_esperado": "G40.2",
            "descripcion": "Epilepsia localizada sintom√°tica"
        },
        {
            "diagnostico": "Paciente de 68 a√±os con ACV emb√≥lico carot√≠deo",
            "edad": 68,
            "sintomas": ["Hemiparesia", "Afasia", "Alteraci√≥n de consciencia"],
            "codigo_esperado": "I63.1",
            "descripcion": "Infarto cerebral debido a embolia de arterias precerebrales"
        },
        {
            "diagnostico": "Paciente con TFG 65 ml/min y proteinuria leve",
            "edad": 52,
            "sintomas": ["Asintom√°tico", "Proteinuria", "Hipertensi√≥n"],
            "codigo_esperado": "N18.2",
            "descripcion": "Enfermedad renal cr√≥nica estadio 2"
        },
        {
            "diagnostico": "Paciente de 65 a√±os con artrosis erosiva de manos",
            "edad": 65,
            "sintomas": ["Dolor articular", "Rigidez", "Deformidad"],
            "codigo_esperado": "M15.2",
            "descripcion": "Artrosis erosiva"
        },
        {
            "diagnostico": "Paciente de 50 a√±os con fatiga cr√≥nica",
            "edad": 50,
            "sintomas": ["Fatiga", "Malestar general", "Astenia"],
            "codigo_esperado": "R53",
            "descripcion": "Malestar y fatiga"
        },
        {
            "diagnostico": "Paciente de 40 a√±os con triglic√©ridos 500 mg/dL",
            "edad": 40,
            "sintomas": ["Asintom√°tico", "Xantomas", "Pancreatitis"],
            "codigo_esperado": "E78.1",
            "descripcion": "Hipergliceridemia pura"
        }
    ]
    
    import random
    ejemplo_aleatorio = random.choice(ejemplos_clinicos)
    
    return {
        "ejemplo": ejemplo_aleatorio,
        "total_ejemplos": len(ejemplos_clinicos),
        "mensaje": "Ejemplo cl√≠nico aleatorio cargado exitosamente"
    }

@app.get("/")
async def root():
    """Endpoint ra√≠z con informaci√≥n del servicio RICOH"""
    return {
        "servicio": "RICOH Espa√±a - IA de Codificaci√≥n M√©dica CIE-10-ES",
        "version": "1.0.0",
        "descripcion": "API de codificaci√≥n m√©dica con GPT-4 Turbo y base CIE-10-ES oficial del Ministerio de Sanidad",
        "empresa": "RICOH Espa√±a",
        "endpoints": {
            "codificar": "POST /codificar - Endpoint principal de codificaci√≥n",
            "health": "GET /health - Estado de salud del servicio",
            "status": "GET /status - Estado detallado del sistema"
        },
        "motor_ia": "OpenAI GPT-4 Turbo",
        "base_datos": "CIE-10-ES Ministerio de Sanidad",
        "status": "ready" if client else "error - configure OPENAI_API_KEY"
    }

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)